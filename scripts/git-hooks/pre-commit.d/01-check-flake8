#!/usr/bin/env python
import subprocess
from pathlib import Path


def check_for_flake8_violation():
    errors = 0
    for path in get_staged_files():
        output, returncode = run(f'flake8 {path}')
        if returncode:
            print(output.strip())
            errors += 1

    if errors:
        error('flake8 violations')


def error(message, code=1):
    """Display error message within a template and exit using code.

    Args:
        message (str): message to display
        code (int, optional): exit code

    """
    print(f'ERROR: COMMIT REJECTED.  {message}.  Please fix them and commit again.')
    exit(code)


def get_staged_files():
    for path in run('git diff --cached --name-only', check=True).split('\n'):
        path = Path(path)
        if path.suffix == '.py':
            if path.exists():
                yield path


def run(command, check=None):
    """Runs a command and returns stdout encoded as utf-8

    Args:
        command (str): command to run
        check (bool, optional): raise error when returncode is not 0

    Returns:
        str: stdout

    """
    proc = subprocess.run(command, stdout=subprocess.PIPE, shell=True, check=check)
    stdout = proc.stdout.decode('utf-8')
    if not check:
        return stdout, proc.returncode
    if check:
        return stdout


if __name__ == '__main__':
    check_for_flake8_violation()
